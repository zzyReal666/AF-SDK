plugins {
    id 'java'

}

group = 'com.af'
version = '2.1-SNAPSHOT'


repositories {
    mavenLocal()
    maven { url 'https://plugins.gradle.org/m2/' }
    maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
    maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
    maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
}


allprojects {
    repositories {
        //  google()
        //  jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
    }
}
dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1') // 单元测试
    testImplementation 'org.junit.jupiter:junit-jupiter'     // 单元测试
    implementation 'ch.qos.logback:logback-classic:1.2.9'
    testImplementation 'junit:junit:4.13.1'// 日志
    compileOnly 'org.projectlombok:lombok:1.18.20'           // lombok
    annotationProcessor 'org.projectlombok:lombok:1.18.20'   // lombok
    implementation 'io.netty:netty-all:4.1.91.Final'         // netty
    implementation group: 'cn.hutool', name: 'hutool-core', version: '5.8.18' // hutool-core
    implementation group: 'cn.hutool', name: 'hutool-crypto', version: '5.8.18' // hutool-crypto
    implementation("cn.hutool:hutool-http:5.8.18")  // hutool-http
    implementation("cn.hutool:hutool-json:5.8.18")  // hutool-json

    // https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.70'


}

test {
    enabled = true
    useJUnitPlatform()
}


//打包成Jar，包含依赖  gradle jar -x test 不执行测试
jar {
    manifestContentCharset 'utf-8'
    metadataCharset 'utf-8'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
            {
                exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA' ,'logback.xml','org/bouncycastle/**'
            }

}

//自动生成文档
tasks.register('generateDocs', Exec) {
    workingDir project.rootDir

    //windows 环境执行.bat Unix执行.sh

    // 根据操作系统选择脚本文件
    if (System.getProperty('os.name').toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'generate_docs.bat'
    } else {
        commandLine 'bash', 'generate_docs.sh'
    }
    // 执行生成文档的批处理文件
}

// 扩展现有的 build 任务
tasks.named('build') {
    // 添加自定义的构建逻辑
    dependsOn 'generateDocs'

}


tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}
